# Schrodinger's Box Backend Server Configuration File
#
# Any modifications to this file will not be effective until the program is restarted
# Please copy the sample file and rename it as schrodinger-box.yaml before you do any edits

# this sets everything (tgbotapi, gorm, gin etc.) to debug mode if true
debug: true
# listening path in the format [[listening addr]:port]
# example: "127.0.0.1:8080", ":8080" (equivalent to 0.0.0.0:8080)
listen: "127.0.0.1:8080"
# mysql is used by default
database: "db_user:db_password@tcp(db_host:3306)/db_name?charset=utf8mb4&parseTime=True&loc=Local"
# domain field MUST NOT have the slash at the end
domain: "http://127.0.0.1:8080"
apiRoot: "/api"
openid:
  # whether to use association mode or not
  associationMode: true
  # whether to verify callback with the OP server WHEN ASSOCIATION MODE IS ON
  doubleVerification: false
external:
  # whether to enable integration of external providers (for both cron and notifications)
  enable:
    - telegram
    - email
  # general setting for notification module
  notification:
    # default cron interval is 1 execution per 20 seconds
    # second field is OPTIONAL and it is not suggested to set it to be too frequent
    # format: [Second] Minute Hour DoM Month DoW
    cron: "*/20 * * * * *"
  telegram:
    # the bot's authorization token
    key: "1140803138:SomethingSomething"
    # default: 1 execution per 1 minute
    cron: "* * * * *"
  email:
    # we use Sendgrid API to send emails
    key: SG.SomeKey_kK
    from: Schrodinger's Box Notification <schrodinger-box@example.com>
    # this is used to generate a hash to verify unsubscription request
    # hash := fmt.Sprintf("%x", md5.Sum([]byte(user.Email + unsubKey)))
    unsubKey: SomeRandomKey
    # default: 1 execution per 1 minute
    cron: "* * * * *"
  bitly:
    key: some_bit.ly_generic_access_token
cors:
  # defines Access-Control-Allow-Origin header returned for API requests
  origin: "*"
azure:
  accountName: "schrodingerbox"
  accountKey: "SomeValidAccessKey=="